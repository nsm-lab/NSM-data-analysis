##
## Mail Client
##
## (Required) Mail Client
mailclient:

  ##
  ## Connection
  ##
  ## (Required) How server connection is made
  connection:
    ## (Required) SMTP User
    ## Ex: SMTPUser: "info"
    SMTPUser: "XXX@outlook.com"

    ## (Required) SMT Server
    ## Ex: SMTPServer: "smtp.gmail.com"
    SMTPServer: "smtp.office365.com"

    ## (Required) SMTP Port
    ## Ex: SMTPPort: 465
    SMTPPort: 587

    ## (Required) Secure connection to Server ("yes"/<any>)
    TLS: "yes"

  ##
  ## Email Message
  ##
  ## (Required) How email message is constructed
  message:

    ## Required) Subject:
    Subject: "What is the meaning of life?"

    ## (Required) From:
    ## Some providers do not like to relay arbitrary `From` emails.
    ## Make sure the "From" is a legitimate your@email.com
    ## Ex. From: "info@xxxx.org" or "Name <info@xxxx.org>"
    From: "Joe B <info@xxxx.org>"

    ## (Required) To:
    ## You can gather destination email addresses in two ways:
    ## 1. a direct email in the configuration file (this)
    ## 2. a list of emails from the storage (e.g. database)
    ##  Ex. To: "xxxx@gmail.com"
    ##  Ex. To: "/path/to/campaign.db"
    To: "campaign.db"

    ## (Optional) mark:
    ## If a (1) direct email is used, you may need to setup additional
    ## attributes of the mark manually. They can be used in the email
    ## template. You can always define other template-only attributes
    ## in the `template-data` sub-section
    mark:
      ## (Optional)
      FirstName: "First"
      ## (Optional)
      LastName: "Last"
      ## (Optional)
      Identifier: "345345sdfsdf"

    ## (Optional)
    ## We would like the templates to have access to additional metadata
    template-data:
      dictionary:
        key: "val"

    ## (Optional) headers: Email envelope headers
    ## Ex: Return-Receipt-To: "info@xxxx.com"
    headers:

    ## (Required) body: email body text/html templates to
    ## construct email message from
    ## Templates can substitute dynamic variables (See. Template Section for details).
    ## Emails a multipart MIME, so both text and html versions of the email are needed.
    body:
      html: "./template.htpl"
      text: "./template.ttpl"

    ## (Optional) attach: attach files to email
    attach:
      # Format:
      #   - "/path/evil_report1.pdf"
      #   - "/path/evil_report2.pdf"

    ## (Optional) embed: embed assets into email
    ## This is useful to embed images vs. sourcing them in from the Internet
    embed:
      # Format:
      #   - "/path/logo_header.png"
      #   - "/path/logo_footer.png"

##
## Storage
##
## (Required) How marks are stored and retrieved, management of storage
storage:
  ## (Required) SQL database file, where store records
  DBFile: "./template.db"

  ## (Required) load: loader of records from a list
  load:
    ## (Required) load: loader of mark records from a CSV list
    ## <id>,email,[first name],[last name]
    SourceFile: "./marks.csv"
    ## (Required) IdentifierRegex: Identifiers are used to track marks across the template.
    ## Regex is used to construct them
    IdentifierRegex: "^[a-z0-9]{8}$"

  ## (Optional) manager: default task to run.
  manager:
    DBTask: "showmarks"

##
## Content
##
## (Optional) content: a list of tools to help with email content templating
content:

  ## Helps generate email templates by merging markdown with styling
  generate:
    ## [In] Markdown file with email content
    SourceMDFile: "template.md"
    ## [In] Location of styling and template to merge
    SourceTemplateHTMLFile: "campaign.html.template"
    ## [Out] Email message template (Phase1)
    TargetHTMLFile: "./email.html"
    ## We would like the templates to have access to additional metadata at generation
    template-data:
      dictionary:
        key: "val"

  ## Helps inline email styling for better compatibility with destination clients
  inline:
    ## [In] Email message (Phase1)
    SourceContentHTMLFile: "./email.html"
    ## [Out] Email message (Phase2: Ready for send)
    TargetMailTemplateHTMLFile: "campaign.htpl"

  ## Helps create multipart email from the HTML version
  multipart:
    # [In] Locaiton of a fully constructed HTML file ready for Email
    SourceMailTemplateHTMLFile: "template.htpl"
    # [Out] Location to save the Text version of the same
    TargetMailTemplateTXTFile: "template.ttpl"
